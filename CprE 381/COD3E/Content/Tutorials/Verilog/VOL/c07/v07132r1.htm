<html>

	<head>
		<meta http-equiv="content-type" content="text/html;charset=iso-8859-1">
		<title></title>
	</head>

	<body bgcolor="white">
		<BASEFONT="times" size"3">
		<table width="600">
			Along the same lines, cascaded ?: operators in continuous assignments can be expensive. For example, it is often tempting to write multiplexed logic like this:
			<pre>
    assign bus = drive==1 ? f(data1) :
                 drive==2 ? f(data2) :
                 (drive==3 | ^cntrlbits) ? f(data3) :
                 drive==4 ? f(data4) : 'bx;
</pre>
			This is a very concise way to write the code. Unfortunately, it is expensive. Applying the previous rule about RHS evaluation, consider what happens when drive==2 and data4 changes value. The entire right-hand side gets evaluated, including all functions and the reduction exlusive-or, even though ultimately the output cannot change.
			<p>A much better way to write this code is:</p>
			<pre>
    assign t1 = f(data1),
           t2 = f(data2),
           t3 = f(data3),
           t4 = f(data4);
    assign s4 = drive==4 ? t4 : 'bx,
           s3 = (drive==3 | ^cntrlbits) ? t3 : s4,
           s2 = drive==2 ? t2 : s3,
           bus = drive==1 ? t1 : s2;
</pre>
			Now, if drive==2 and data4 changes, only t4 and s4 are affected.
		</table>
	</body>

</html>