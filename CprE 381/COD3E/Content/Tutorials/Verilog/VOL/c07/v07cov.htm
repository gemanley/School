<html>

	<head>
		<meta http-equiv="content-type" content="text/html;charset=iso-8859-1">
		<title>CHAPTER OVERVIEW</title>
	</head>

	<body bgcolor="white">
		<table width="600">
			<tr>
				<td><FONT SIZE="6" FACE="TIMES">
					<h2><B>
						<center>
							Verilog Hardware Description Language, An Introductory Course Chapter 7: Coding Style
							<p>Chapter Overview</B></FONT></p>
						</center>
					</h2>
					</CENTER>
					<p><b></b></p>
					<ul>
						<li><a href="javascript:parent.gotoScreen('07','003',0)">Objectives</a>
						<li><a href="javascript:parent.gotoScreen('07','006',0)">Review</a>
						<li><a href="javascript:parent.gotoScreen('07','009',0)">Modelling Clocks</a>
							<ul>
								<li><a href="javascript:parent.gotoScreen('07','012',0)">Primitive (Gate Level)</a>
								<li><a href="javascript:parent.gotoScreen('07','015',0)">Continuous Assignment</a>
								<li><a href="javascript:parent.gotoScreen('07','018',0)">Procedural</a>
								<li><a href="javascript:parent.gotoScreen('07','024',0)">Two-Phase Clocks</a>
							</ul>
						<li><a href="javascript:parent.gotoScreen('07','027',0)">Finite State Machines</a>
							<ul>
								<li><a href="javascript:parent.gotoScreen('07','033',0)">Implicit</a>
								<li><a href="javascript:parent.gotoScreen('07','036',0)">Explicit</a>
									<ul>
										<li><a href="javascript:parent.gotoScreen('07','039',0)">Next State Logic</a>
											<ul>
												<li><a href="javascript:parent.gotoScreen('07','042',0)">Output Logic: Moore Machine</a>
												<li><a href="javascript:parent.gotoScreen('07','045',0)">Output Logic: Mealy Machine</a>
												<li><a href="javascript:parent.gotoScreen('07','048',0)">Output Timing</a>
											</ul>
										<li><a href="javascript:parent.gotoScreen('07','057',0)">State Memory</a>
											<ul>
												<li><a href="javascript:parent.gotoScreen('07','060',0)">Complications</a>
											</ul>
									</ul>
							</ul>
					</ul>
					<ul>
						<li><a href="javascript:parent.gotoScreen('07','063',0)">Pipelines</a>
							<ul>
								<li><a href="javascript:parent.gotoScreen('07','066',0)">Independent Pipe Stages</a>
									<ul>
										<li><a href="javascript:parent.gotoScreen('07','069',0)">Pipe Stages as Separate Module Instances</a>
										<li><a href="javascript:parent.gotoScreen('07','072',0)">Combinatorial Logic in the Pipeline</a>
									</ul>
							</ul>
					</ul>
					<ul>
						<li><a href="javascript:parent.gotoScreen('07','075',0)">Zero-Delay Models</a>
							<ul>
								<li><a href="javascript:parent.gotoScreen('07','081',0)">Implementation</a>
									<ul>
										<li><a href="javascript:parent.gotoScreen('07','084',0)">Without Using NBAs</a>
									</ul>
								<li><a href="javascript:parent.gotoScreen('07','087',0)">Unit-Delay Models</a>
							</ul>
					</ul>
					<ul>
						<li><a href="javascript:parent.gotoScreen('07','090',0)">Race Conditions</a>
							<ul>
								<li><a href="javascript:parent.gotoScreen('07','093',0)">Initial and Always Blocks at Startup</a>
								<li><a href="javascript:parent.gotoScreen('07','096',0)">Pipelined Data Movement</a>
								<li><a href="javascript:parent.gotoScreen('07','099',0)">Data Change/Wait for Change</a>
								<li><a href="javascript:parent.gotoScreen('07','102',0)">Propagation from Procedural to Continuous Assignment</a>
								<li><a href="javascript:parent.gotoScreen('07','105',0)">Updating the Same Value Twice</a>
								<li><a href="javascript:parent.gotoScreen('07','108',0)">Counting Events</a>
							</ul>
						<li><a href="javascript:parent.gotoScreen('07','111',0)">Efficient Modelling Techniques</a>
							<ul>
								<li><a href="javascript:parent.gotoScreen('07','117',0)">Compile Time vs. Run Time</a>
								<li><a href="javascript:parent.gotoScreen('07','120',0)">Reduce the Number of Events</a>
								<li><a href="javascript:parent.gotoScreen('07','123',0)">Use Higher Levels of Abstraction</a>
								<li><a href="javascript:parent.gotoScreen('07','126',0)">Don't Split Vectors</a>
								<li><a href="javascript:parent.gotoScreen('07','129',0)">Avoid Bi-Direct Primitives</a>
								<li><a href="javascript:parent.gotoScreen('07','132',0)">Minimize RHS Evaluations in Continuous Assigns</a>
								<li><a href="javascript:parent.gotoScreen('07','135',0)">Optimize Always @(event_expression) Blocks</a>
							</ul>
						<li><a href="javascript:parent.gotoScreen('07','138',0)">Examples</a>
							<ul>
								<li><a href="javascript:parent.gotoScreen('07','141',0)">Pipelined Execution Unit</a>
								<li><a href="javascript:parent.gotoScreen('07','144',0)">Local Interrupt Controller</a>
								<li><a href="javascript:parent.gotoScreen('07','147',0)">Limit Counter</a>
							</ul>
						<li>Exercises
							<ul>
								<li><a href="javascript:parent.gotoScreen('07','150',0)">Question 1</a>
								<li><a href="javascript:parent.gotoScreen('07','153',0)">Question 2</a>
								<li><a href="javascript:parent.gotoScreen('07','156',0)">Question 3</a>
								<li><a href="javascript:parent.gotoScreen('07','159',0)">Question 4</a>
								<li><a href="javascript:parent.gotoScreen('07','162',0)">Question 5</a>
								<li><a href="javascript:parent.gotoScreen('07','165',0)">Question 6</a>
								<li><a href="javascript:parent.gotoScreen('07','168',0)">Question 7</a>
								<li><a href="javascript:parent.gotoScreen('07','171',0)">Question 8</a>
								<li><a href="javascript:parent.gotoScreen('07','174',0)">Question 9</a>
								<li><a href="javascript:parent.gotoScreen('07','177',0)">Question 10</a>
								<li><a href="javascript:parent.gotoScreen('07','180',0)">Question 11</a>
								<li><a href="javascript:parent.gotoScreen('07','183',0)">Question 12</a>
							</ul>
					</ul>
				</td>
			</tr>
		</table>
	</body>

</html>