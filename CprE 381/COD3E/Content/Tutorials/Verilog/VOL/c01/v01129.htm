<head>
	<meta http-equiv="content-type" content="text/html;charset=iso-8859-1">
	<title></title>
</head>

<script language="JavaScript">

</script>

<body bgcolor="white">
		<table width="600" cellpadding="10">
		<tr>
			<td>&nbsp;&nbsp;&nbsp;</font><b>1</b><tt>&nbsp;&nbsp;assign x = f(in);</tt><br>&nbsp;&nbsp;&nbsp;</font><b>2</b><tt>&nbsp;&nbsp;assign y = g(x);</tt><br>&nbsp;&nbsp;&nbsp;</font><b>3</b><tt>&nbsp;&nbsp;assign out = h(y);</tt>
				<p></font>The result of this process is that when <tt>in</tt> changes, the effects will ripple through all continuous assignments which depend on it until all signals which appear on the left hand sides of the assignments are updated.</p>
				<p>In this regard, continuous assignments act the same as primitives and module instantiations. For a module instantiation or primitive, input ports act like the right hand side of a continuous assignment, and output ports act like left hand sides.</p>
			</td>
		</tr>
	</table>
</body>

</HTML>