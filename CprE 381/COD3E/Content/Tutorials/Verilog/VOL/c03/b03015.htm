<html>

	<head>
		<meta http-equiv="content-type" content="text/html;charset=iso-8859-1">
		<title></title>
	</head>

	<body bgcolor="white">
				<table width="600" cellpadding="10">
			<tr>
				<td>Expressions can be used for delay values. These are introduced with the #, and can be used on primitive instantiations, continuous assignments, net declarations, and procedural statement controls.
					<p>Any place where an expression can be used to specify a delay, a triple can be used, in the form <b>min:typ:max</b>. Each of min, typ, and max are themselves expressions. At simulation time, only one of the three values will be used, and it will always be the same one from all delay expression triples. That is, if the simulation uses the min value, then all delay expression triples will have the value of the min expression. Which of the three values to use in any particular simulation run is determined external to the model.</p>
					<p><a href="b03015.htm"></a></p>
					<center>
						<img src="images/vexample.gif" height="39" width="91" border="0"></a></center>
					<p><br>
					</p>
					<table width="600">
						<tr>
							<td>Here are examples of delay expressions:
								<p><tt></tt></p>
								<dl>
									<dd>assign #(5:10:15) sum = a + b;
									<dd>nand #(rise_min:rise_typ:rise_max, rise_min-1:rise_typ-2:rise_max-3)
									<dd>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;(cbar, a, b);
								</dl>
								</TT>In the second example, rise_min, rise_typ, and rise_max would have to be parameters, since constant expressions are required here.</td>
						</tr>
					</table>
				</td>
			</tr>
		</table>
	</body>

</html>