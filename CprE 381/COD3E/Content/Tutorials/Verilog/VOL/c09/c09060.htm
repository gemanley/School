<html>

	<head>
		<meta http-equiv="content-type" content="text/html;charset=iso-8859-1">
		<title></title>
	</head>

	<body bgcolor="white">
				<table width="600" cellpadding="10">
			<tr>
				<td width="600">This example is similar to the previous fetch/set example. The register which is to be modified is named &quot;longReg&quot;, and it is a vector of arbitrary bit width. The user-defined task takes two parameters, a value and a word number. The word number (32-bit words) is used to decide which bits of longReg to update with the value.
					<p>New utility routines used:</p>
					<p>acc_handle_object ( &quot;longReg&quot; )<br>
						Function returns a handle to the named object. The name is either fully-qualified or relative, starting at the current PLI scope.</p>
					<p>acc_fetch_size (longRegHandle)<br>
						Returns the size of the object in number of bits.</p>
					<p>acc_fetch_value ( longRegHandle, &quot;%%&quot;, &newValue )<br>
						Returns the logic or strength value of the object. The result is returned either as a string or, as in this case, in a structure.</p>
					<p>tf_warning ( &quot;word parameter is out of range!&quot; )<br>
						Print a warning message.</p>
				</td>
			</tr>
		</table>
		<table width="600">
			<tr>
				<td align="center" width="150"><a href="a09060.htm"><img src="images/vverilog.gif" height="39" width="139" border="0"></a></td>
				<td align="center" width="150"><a href="b09060.htm"><img src="images/vpli.gif" height="39" width="136" border="0"></a></td>
				<td align="center" width="190"><a href="c09060.htm"><img src="images/vuser.gif" height="39" width="177" border="0"></a></td>
				<td align="center" width="110"><a href="d09060.htm"><img src="images/vresults.gif" height="39" width="87" border="0"></a></td>
			</tr>
		</table>
		<p><br>
		</p>
		<table width="600">
			<tr>
				<td>
					<pre>
/* ex5_acc4.c */
#include &quot;acc_user.h&quot;
#include &quot;vcsuser.h&quot;
 
/* Sets a word of a signal to a specific value */
int set_longReg ( )
{
    int         new;                    /* New value to process */
    int         word;                   /* Which word to set */
    static s_setval_delay delay;
    s_acc_value newValue;
    handle      longRegHandle;
    int         words;
 
    delay.model = accNoDelay;
 
    new = acc_fetch_tfarg ( 1 );
    word = acc_fetch_tfarg ( 2 );
 
    io_printf ( &quot;In my_acc: new=0x%x, word=%d\n&quot;, new, word );
 
    longRegHandle = acc_handle_object ( &quot;longReg&quot; );
    words = ( ( acc_fetch_size (longRegHandle) -1 ) / 32 ) + 1;

    if ( word &gt; words  ) {
        tf_warning ( &quot;word parameter is out of range!&quot; );
        return 1;
    }
    word--;
    newValue.format = accVectorVal;
    newValue.value.vector = (p_acc_vecval)malloc(words*sizeof(s_acc_vecval));
                    
    acc_fetch_value ( longRegHandle, &quot;%%&quot;, &newValue );
 
    /* If new is -1, then set word to unknown */
    if ( -1 == new ) {
        newValue.value.vector[word].aval = 0xffffffff;
        newValue.value.vector[word].bval = 0xffffffff;
    } else {
        newValue.value.vector[word].aval = new;
        newValue.value.vector[word].bval = 0x0;
    }
 
    acc_set_value ( longRegHandle, &newValue, &delay );
     return 0;
}
</pre>
					This time the handle is obtained by acc_handle_object. The size is obtained by acc_fetch_size, and the value is set with acc_set_value as before.</td>
			</tr>
		</table>
	</body>

</html>