<html>

	<head>
		<meta http-equiv="content-type" content="text/html;charset=iso-8859-1">
		<title></title>
	</head>

	<body bgcolor="white">
				<table width="600" cellpadding="10">
			<tr>
				<td width="600">Here the user-defined routine is just a place-holder - there is no call= entry point. The C routine my_abort is to be called at the end of simulation, at which time it implements a small command loop.
					<p>To do this, we use the misc= field in the PLI table. Then, we write the C routine. Note that the user-defined routine must still appear in the Verilog source, even though it does nothing when executed (and, in fact, does not need to be executed).</p>
				</td>
			</tr>
		</table>
		<table width="600">
			<tr>
				<td align="center" width="150"><a href="a09066.htm"><img src="images/vverilog.gif" height="39" width="139" border="0"></a></td>
				<td align="center" width="150"><a href="b09066.htm"><img src="images/vpli.gif" height="39" width="136" border="0"></a></td>
				<td align="center" width="190"><a href="c09066.htm"><img src="images/vuser.gif" height="39" width="177" border="0"></a></td>
				<td align="center" width="110"><a href="d09066.htm"><img src="images/vresults.gif" height="39" width="87" border="0"></a></td>
			</tr>
		</table>
		<p><br>
		</p>
		<table width="600">
			<tr>
				<td>
					<pre>
/* ex12_reason.v */
module ex12_reason;
 
   reg [31:0]Areg;
   
   initial begin
      $my_abort;
      $monitor ( &quot;Areg = %d&quot;, Areg );
      #1 Areg = 1;
      #1 Areg = 2; 
      $finish;
   end
endmodule /* ex12_reason */
</pre>
				</td>
			</tr>
		</table>
	</body>

</html>