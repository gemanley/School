<html>

	<head>
		<meta http-equiv="content-type" content="text/html;charset=iso-8859-1">
		<title></title>
	</head>

	<body bgcolor="white">
				<table width="600" cellpadding="10">
			<tr>
				<td width="600">This example shows how to change the delays in the Verilog source. This is the way back-annotation usually works with Verilog. In this case, the new delays are simply compiled into the C routine. It would be more realistic to read them from a file (typically a file in SDF format).
					<p>New utility routines used:</p>
					<p>acc_configure ( accPathDelayCount, &quot;2&quot; )<br>
						Sets configuration information for a variety of other acc routines. In this case, it sets those routines having to do with delays to use 2 delay values, as opposed to 1, 3, 6, or 12.</p>
					<p>acc_fetch_delays ( objHandle, &rise, &fall )<br>
						Gets the rise and fall delays for the specified object.</p>
					<p>acc_replace_delays ( objHandle, d[i].rise, d[i].fall )<br>
						Changes the rise and fall delays for the object.</p>
				</td>
			</tr>
		</table>
		<table width="600">
			<tr>
				<td align="center" width="150"><a href="a09075.htm"><img src="images/vverilog.gif" height="39" width="139" border="0"></a></td>
				<td align="center" width="150"><a href="b09075.htm"><img src="images/vpli.gif" height="39" width="136" border="0"></a></td>
				<td align="center" width="190"><a href="c09075.htm"><img src="images/vuser.gif" height="39" width="177" border="0"></a></td>
				<td align="center" width="110"><a href="d09075.htm"><img src="images/vresults.gif" height="39" width="87" border="0"></a></td>
			</tr>
		</table>
		<p><br>
		</p>
		<table width="600">
			<tr>
				<td>
					<pre>
/* ex9_delay.v */
module ex9_delay;
   reg [1:0] A;
   reg [1:0] B;
   wire [2:0] result;
   
   add2 a ( A[1], A[0], B[1], B[0], result[2], result[1], result[0] );
   
   initial begin
      $monitor ( &quot;time=%0t, A=%b, B=%b, result=%b&quot;, 
                  $time, A, B, result );
      #100 A=0; B=0;
      #100 A=3; B=0;
      #100 A=0; B=3;
      #100 A=3; B=3;
      #100 $change_delays;
      #100 A=0; B=0;
      #100 A=3; B=0;
      #100 A=0; B=3;
      #100 A=3; B=3;
      #100 $finish;
   end
endmodule /* ex9_delay */

module add2 ( A1, A0, B1, B0, C2, C1, C0 );
   input A1, A0, B1, B0;
   output C2, C1, C0;
   
   wire tmp1, tmp2;
   wire tmp3, tmp4, tmp5, tmp6, tmp7;
   
   xor #(1)     x1 ( C0,   A0,   B0 );
   and #(1,2)   a1 ( tmp1, A0,   B0 );
   xor #(1,2)   x2 ( tmp2, A1,   B1 );
   xor #(1)     x3 ( C1,   tmp1, tmp2 );
   and #(1)     a2 ( tmp3, A1,   B1 ); 
   and #(1)     a3 ( tmp4, A0,   B0 ); 
   and #(1)     a4 ( tmp5, tmp4, A1 ); 
   and #(1)     a5 ( tmp6, tmp4, B1 ); 
   or  #(1)     x4 ( tmp7, tmp3, tmp5 );  
   or  #(1)     x5 ( C2,   tmp7, tmp6 ); 
   
endmodule /* add2 */
</pre>
				</td>
			</tr>
		</table>
	</body>

</html>