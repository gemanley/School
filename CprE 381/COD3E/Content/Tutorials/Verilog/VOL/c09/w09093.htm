<html>

	<head>
		<meta http-equiv="content-type" content="text/html;charset=iso-8859-1">
		<title></title>
	</head>

	<body onload=" parent.initBtn0()" bgcolor="white">
				<table width="600" cellpadding="10">
			<b>The following Verilog code uses $nextInput(invar) to get a new value for the integer variable invar for successive tests. What is the proper entry in pli.tab if the C routine is named NextIn?</b>
			<p></p>
		</table>
		<pre>
module testbench;
   integer invar;

   initial begin
      for ($nextInput(invar); invar&gt;0; $nextInput(invar))
         case(invar)
      1:    test1;
      2:    test2;
      3:    test3;
         endcase
   end

task test1; ... endtask
task test2; ... endtask
task test3; ... endtask

endmodule /* testbench */
</pre>
		<hr>
		<form>
			<input onclick="parent.setValue(0,0)" type="radio" name="A" value="A">1. $nextInput call=NextIn<br>
			<input onclick="parent.setValue(0,1)" type="radio" name="A" value="B"><font color="#4B0082"><b>2. $nextInput call=NextIn size=32</b></font><br>
			<input onclick="parent.setValue(0,2)" type="radio" name="A" value="A">3. $nextInput call=NextIn data=invar<br>
			<input onclick="parent.setValue(0,3)" type="radio" name="A" value="A">4. $nextInput call=NextIn misc=NextIn<br>
			<input onclick="parent.setValue(0,4)" type="radio" name="A" value="A">5. none of the above
		</form>
		<b>Answer (2) specifies that $nextInput is a function and it sets up a call to NextIn whenever $nextInput is called. Answer (1) forces $nextInput to be a task, so it could not be used in the for statement. Answer (3) has an incorrect value for data (it must be a constant), and answer (4) specifies that NextIn should be called for misc events, which is not what is wanted.</b></TABLE>
	</body>

</html>