<html>

	<head>
		<meta http-equiv="content-type" content="text/html;charset=iso-8859-1">
		<title></title>
	</head>

	<body bgcolor="white">
				<table width="600" cellpadding="10">
			<tr>
				<td>The assignment mechanics are pretty straightforward. The value of the right-hand side expression (<tt>rhs</tt>) is assigned to the left-hand side (<tt>lhs</tt>) register. Click each expression to learn about how it is evaluated.</td>
			</tr>
		</table>
		<p></p>
		<table width="600" border="1" cellpadding="5">
			<tr>
				<td>
					<table width="600">
						<tr>
							<td width="300" HALIGN="CENTER"><a href="b05084.htm"><tt>lhs = rhs;</tt></a></td>
							<td width="300" HALIGN="CENTER"><a href="c05084.htm"><tt>lhs[bit] = rhs;</tt></a></td>
						</tr>
						<tr>
							<td width="300" HALIGN="CENTER"><a href="d05084.htm"><tt>lhs[partmsb:partlsb] = rhs;</tt></a></td>
							<td width="300" HALIGN="CENTER"><a href="e05084.htm"><tt>{lhs1, lhs2} = rhs;</tt></a></td>
						</tr>
					</table>
				</td>
			</tr>
			<tr>
				<td>The low-order bit of the rhs expression is assigned to the specified bit position of the lhs. All other bits in the lhs are left unchanged. Which bit gets the new value is determined by the declaration of the register. In these three examples, the bit position in the lhs is not the same.
					<p></p>
					<pre>
        reg [0:7] lhs1;
        reg [7:0] lhs2;
        reg [8:1] lhs3;
        
        lhs1[2] = 1'b1;         // _ _ 1 _ _ _ _ _
        lhs2[2] = 1'b1;         // _ _ _ _ _ 1 _ _
        lhs3[2] = 1'b1;         // _ _ _ _ _ _ 1 _
</pre>
				</td>
			</tr>
		</table>
	</body>

</html>