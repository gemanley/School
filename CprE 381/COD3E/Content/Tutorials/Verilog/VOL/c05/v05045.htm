<html>

	<head>
		<meta http-equiv="content-type" content="text/html;charset=iso-8859-1">
		<title></title>
	</head>

	<body bgcolor="white">
				<table width="600" cellpadding="10">
			<tr>
				<td>Procedural assignment statements which use the &quot;=&quot; operator are called <a href="javascript:parent.goGlossHash('#blockas')"><font color="#B22222"><b>blocking assignments</b></font></a>. They have the form
					<p><tt>&nbsp;&nbsp;&nbsp;lhs = [control] rhs ;</tt></p>
					<p></TT>The reason they are called &quot;blocking&quot; is that the next statement after the assignment statement does not begin executing until the assignment has finished.</p>
					<p>This is not a very radical notion, since in procedural code, it is usually the case that each statement is executed sequentially. The real reason these statements are called &quot;blocking&quot; is to distinguish them from <a href="javascript:parent.goGlossHash('#nonblock')"><font color="#B22222">non-blocking assignment</font></a> statements which do not have that property.</p>
					<p>The notion that an assignment &quot;blocks&quot; is more than trivial, however, in the case where a control is present within the assignment. This situation is called an <a href="javascript:parent.goGlossHash('#intraassign')"><font color="#B22222">intra-assignment delay</font></a> or an <a href="javascript:parent.goGlossHash('#intraeve')"><font color="#B22222">intra-assignment event control</font></a>.</p>
				</td>
			</tr>
		</table>
		</FONT>
	</body>

</html>